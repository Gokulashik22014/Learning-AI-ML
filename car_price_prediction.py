# -*- coding: utf-8 -*-
"""Car Price Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UqnZ95_HWY55jikGef3RX-avSQu7IhQz
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import make_column_transformer
from sklearn.pipeline import make_pipeline

from google.colab import drive
drive.mount('/content/drive')

data=pd.read_csv(os.path.join('drive',"MyDrive","data","car_dataset.csv"))
data.head()

for i in ['name','company']:
  print(i,data[i].unique())

for i in ['i', '2012', 'Well', 'all', '7', '9',
 'scratch', 'urgent', 'sell', 'Any','very', 'Tara','URJENT','Used',"I","Land","selling","Sale","TATA","tata"]:
 data=data[data['company']!=i]
 if any(data['company'].str.lower().eq(i.lower())):
  temp=data[data['company']==i]
  temp['company']=i.capitalize()
  data=pd.concat([data, temp], ignore_index=True)
print(data['company'].unique())

data=data[data["Price"]!="Ask For Price"]
data["Price"]=data["Price"].str.replace(",","").astype(int)
data["Price"].unique()

temp1=pd.DataFrame({"name":data["name"]})
print(temp1["name"].unique().size,temp["name"].size)
for i in temp1["name"].unique():
  print(i,data[data["name"]==i].size)

temp2=data["name"].str.split().str.slice(0,4).str.join(" ")
print(temp1["name"].unique().size,temp2.unique().size)
for i,j in zip(temp1["name"],temp2):
  print(f"original: {i} modified: {j}")

data["name"]=data["name"].str.split().str.slice(0,4).str.join(" ")
data

data["Price"].dropna()
data

data=data[data["year"].str.isnumeric()]

temp3=data[data["fuel_type"].isna()]
temp4=data[data["name"].isin(temp["name"])]
for i in temp3["name"].unique():
  print(i,temp4[temp4["name"]==i]["name"].size)
  print(temp4[temp4["name"]==i])
data["fuel_type"]=data["fuel_type"].fillna("Petrol")

data=data.dropna(subset="kms_driven")

data=data[data["kms_driven"]!="Petrol"]
data["kms_driven"]=data["kms_driven"].str.split().str.slice(0,1).str.join("").str.replace(",","").astype(int)
print(data.shape)
data

x=data.drop(columns=["Price"])
y=data["Price"]
print(x,y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

# using one hot encoder to categories the data
OHE=OneHotEncoder()
OHE.fit(x[["name","company","fuel_type"]])

column_trans=make_column_transformer((OneHotEncoder(categories=OHE.categories_),['name','company',"fuel_type"]),
                                    remainder='passthrough')

lr=LinearRegression()
pipe=make_pipeline(column_trans,lr)

pipe.fit(x_train,y_train)
y_pred=pipe.predict(x_test)

r2_score(y_test,y_pred)

scores=[]
for i in range(1000):
    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=i)
    lr=LinearRegression()
    pipe=make_pipeline(column_trans,lr)
    pipe.fit(x_train,y_train)
    y_pred=pipe.predict(x_test)
    scores.append(r2_score(y_test,y_pred))

scores[np.argmax(scores)]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.1,random_state=np.argmax(scores))
lr=LinearRegression()
pipe=make_pipeline(column_trans,lr)
pipe.fit(x_train,y_train)
y_pred=pipe.predict(x_test)
r2_score(y_test,y_pred)

result=pipe.predict(pd.DataFrame(columns=['name','company','year','kms_driven','fuel_type'],data=np.array(['Maruti Suzuki Swift','Maruti',2019,100,'Petrol']).reshape(1,5)))

print("The price of the Maruti Suzuki Swift is",round(result[0]))